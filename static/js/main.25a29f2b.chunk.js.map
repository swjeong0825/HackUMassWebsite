{"version":3,"sources":["logo.svg","images/wiki.jpg","App.js","reportWebVitals.js","index.js"],"names":["Radium","useState","button0_name","set_button0_name","className","type","style","listStyle","id","display","onClick","width","height","value","verticalAlign","padding","src","wiki_img","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAAe,I,aCAA,MAA0B,iCCsD1BA,mBA/Cf,WAAgB,IAAD,EAC4BC,mBAAS,UADrC,mBACNC,EADM,KACQC,EADR,KAWb,OACE,sBAAKC,UAAU,MAAf,UACE,8CACA,6CAAuB,uBAAOC,KAAO,SACrC,qBAAIC,MAAS,CAACC,UAAW,QAAzB,UACE,sBAAKH,UAAY,eAAjB,UACE,qBAAII,GAAK,iBAAT,uBAEE,sBAAKF,MAAS,CAACG,QAAS,SAAxB,UACE,wBACEC,QAnBe,WAEzBP,EADmB,WAAjBD,EACe,WAEA,WAcT,SAEKA,IAEJ,IACD,yBAAQI,MAAS,CAACK,MAAO,OAAQC,OAAQ,QAAzC,UACE,wBAAQC,MAAQ,IAAhB,gBACA,wBAAQA,MAAQ,IAAhB,iBACA,wBAAQA,MAAQ,IAAhB,iBACA,wBAAQA,MAAQ,IAAhB,0BAIN,qBAAKP,MAAS,CAACQ,cAAe,SAAUC,QAAS,QAASC,IAAOC,EAAUN,MAAQ,UACnF,+CAEF,qBAAKP,UAAY,eAAjB,SACE,oBAAII,GAAK,iBAAT,4BAEF,qBAAKJ,UAAY,eAAjB,SACE,oBAAII,GAAK,iBAAT,wCCnCKU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.25a29f2b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/wiki.5e28b6e0.jpg\";","import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from \"react\"\nimport Radium from \"radium\";\nimport styled from \"styled-components\"\nimport wiki_img from \"./images/wiki.jpg\"\n\nfunction App() {\n  const [button0_name, set_button0_name] = useState(\"Donate\");\n  const toggle_donate_button = () =>{\n    if (button0_name === \"Donate\"){\n      set_button0_name(\"Donating\");\n    } else {\n      set_button0_name(\"Donate\")\n    }\n  }\n\n\n  return (\n    <div className=\"App\">\n      <h1>Project Name</h1>\n      <label>Search: </label><input type = \"text\"></input>\n      <ol style = {{listStyle: \"none\"}}>\n        <div className = \"organization\" >\n          <li id = \"organization-0\">\n            Wikipiedia \n            <div style = {{display: \"block\"}}>\n              <button \n                onClick = {toggle_donate_button}>\n                  {button0_name}\n              </button>\n              {\" \"}\n              <select style = {{width: \"60px\", height: \"25px\"}}>\n                <option value = \"0\">5%</option>\n                <option value = \"1\">10%</option>\n                <option value = \"2\">15%</option>\n                <option value = \"3\">20%</option>\n              </select>\n            </div>\n          </li>\n          <img style = {{verticalAlign: \"middle\", padding: \"20px\"}} src = {wiki_img} width = \"150px\"></img>\n          <p>Description</p>\n        </div>\n        <div className = \"organization\">\n          <li id = \"organization-1\">Khan Academy</li>\n        </div>\n        <div className = \"organization\">\n          <li id = \"organization-2\">#3 organization</li>\n        </div>\n      </ol>\n    </div>\n  );\n}\n\nexport default Radium(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}